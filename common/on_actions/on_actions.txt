#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.
on_monthly_pulse = { }

on_yearly_pulse = { }

on_yearly_pulse_2 = { }

on_yearly_pulse_3 = { }

on_yearly_pulse_4 = { }

on_yearly_pulse_5 = { }

on_new_term_election = { }

on_province_owner_change = { }

# country
on_religion_change = { }

# country.
on_secondary_religion_change = { }

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands =  {}

# country
on_colonial_liberation = {
}

# country
on_colonial_reintegration = {
}

# country
on_peace_actor = {
}

# country
on_peace_recipient = {
}

# country
# root = winning country, from = loser country
on_war_won = {}

# country
# root = winning country, from = loser country
on_main_war_won = {
}

# country
# root = winning country, from = loser country
on_separate_war_won = {
}

# country
# root = loser country, from = winner country
on_war_lost = {}
on_main_war_lost = {
}
on_separate_war_lost = {
}


# country
# root = winning country, from = loser country
on_battle_won_country = {}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
}

# province
# root = location, from = loser country
on_battle_won_province = {}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={
}

# province
# root = location, from = country doing it
on_removed_from_company ={
}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
}

# country
# root = winning country, from = location
on_siege_won_country = {}

# country
# root = losing country, from = location
on_siege_lost_country = {
}

# province
# root = location, from = losing country
on_siege_won_province = {}

# province
# root = location, from = winning country
on_siege_lost_province =  {
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# province
# root = location, from = country that owns it
# Fired right after the great project is constructed
on_great_project_constructed = {
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
}

on_new_consort = {
}

# country
on_monarch_death = {
}

# country
on_regent = {
}

# country
on_extend_regency = {
}

# country
on_death_election = {
}

# country
on_death_foreign_slave_ruler = {
}

# country
on_replace_governor = {
}


# country
on_bankruptcy = {
}

# country (country annexing, root = target)
on_diplomatic_annex = {
}

# country
on_heir_death = {
}

# country
on_queen_death = {}

# country
on_new_heir = {
}

# country
on_weak_heir_claim = {
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
}

# Emperor from same dynasty
on_successive_emperor = {
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor 
on_emperor_elected = {}

# HRE Prince released by the emperor
on_released_hre_member = {
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
}

on_lock_hre_religion = {
}

on_change_hre_religion = {
}

on_hre_religion_white_peace = {
}

# When a non-native changes government type
on_government_change = {
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {}

on_embrace_revolution = { }

# THIS = Revolutionary country being beaten, FROM = Country enforcing the peace treaty
on_dismantle_revolution = {
}

# province
on_adm_development = { }

# province
on_dip_development = { }

# province
on_mil_development = { }

on_overextension_pulse = {
}


on_colonial_pulse = {
}

on_siberian_pulse = {
}


on_bi_yearly_pulse = { }


on_bi_yearly_pulse_2 = {
}

on_bi_yearly_pulse_3 = { }

on_bi_yearly_pulse_4 = {}

on_bi_yearly_pulse_5 = { }



# country random events
on_thri_yearly_pulse = { }

on_thri_yearly_pulse_2 = {
}

on_thri_yearly_pulse_3 = {}

on_thri_yearly_pulse_4 = {
}

on_four_year_pulse = {
}

on_four_year_pulse_2 = {
}

on_four_year_pulse_3 = {
}

on_four_year_pulse_4 = {
}

on_five_year_pulse = {
}


# Estates pulse
on_five_year_pulse_2 = {
}

on_five_year_pulse_3 = {
}

on_five_year_pulse_4 = {}

# El Dorado
# FROM = country doing the exploring, ROOT = province discovered
on_explore_coast =  {}
on_conquistador_empty =  {}

on_conquistador_native = {
}

on_buy_religious_reform = {
}

on_circumnavigation = {
}

on_become_free_city = {
}

on_remove_free_city = {
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
}

on_revoke_estate_land =  {}

on_revoke_estate_land_ai_post = {
}
on_revoke_estate_land_post = {
}

on_grant_estate_land = {
}

on_death_has_harem = {
}

on_select_heir_from_harem = {
}

on_fetishist_cult_change = {
}

# country
on_gain_great_power_status = {
}

# country
on_lose_great_power_status = {
}

# province
on_province_religion_converted =  {}

on_province_religion_changed = {}

# province, manually conversion
on_province_culture_converted = {
}

# province, general conversion through effects
on_province_culture_changed = {
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {}

# country
on_parliament_debate_reset = {
}

#province
on_parliament_seat_given = {
}

#province
on_parliament_seat_lost = {
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
}

# country
on_harmonized_pagan = {
}
on_harmonized_christian = {
}
on_harmonized_muslim = {
}
on_harmonized_jewish_group = {
}
on_harmonized_zoroastrian_group = {
}
on_harmonized_dharmic = {
}
on_harmonized_mahayana = {
}
on_harmonized_buddhism = {
	
}
on_harmonized_shinto = {
}
on_harmonized_vajrayana = { 
}

# province
on_consecrate_patriarch = {}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {}

# country
on_general_recruited = {

}

# country
on_admiral_recruited = {
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
}

# THIS = Province, FROM = Country
on_regiment_recruited = {

}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited = {
}
# THIS = One province in the state
on_add_pasha = { }

# THIS = One province in the state
on_remove_pasha = { }

# THIS = Province
on_janissaries_raised = {
}

on_cawa_raised = {
}

on_carolean_raised = {
}

on_hussars_raised = {
}

on_revolutionary_guard_raised = {
}

on_banner_raised = {
}

on_cossack_raised = {
}

on_marine_raised = {
}

on_rajput_raised = {
}

on_streltsy_raised = {
}

on_tercio_raised = {
}

on_musketeer_raised = {
}

on_samurai_raised = {
}

on_qizilbash_raised = {
}

on_mamluks_raised = {
}

on_geobukseon_raised = {
}

on_man_of_war_raised = {
}

on_galleon_raised = {
}

on_galleass_raised = {
}

on_caravel_raised = {
}

on_voc_indiamen_raised = {
}

on_hre_reform_passed = {
}

on_mandate_reform_passed = {}

on_reform_enacted = {
}

on_reform_changed = {
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {
}

on_center_of_trade_downgrade = {
}

on_culture_promoted = {
}

on_culture_demoted = {
}

on_primary_culture_changed = {}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {

}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
}

# this = Released country, FROM = Releasing country
on_country_released = {}

# ROOT = province, FROM = country
on_trade_good_changed = {
}

# this = country
on_loan_repaid = {
}

# this = country
on_rebels_break_country = {
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
}

# this = country
on_pre_dip_advisor_fired = {
}

# this = country
on_pre_mil_advisor_fired = {
}

# this = country
on_post_adm_advisor_fired = {
}

# this = country
on_post_dip_advisor_fired = {
}

# this = country
on_post_mil_advisor_fired = {
}

# this = new client state, from = parent country
on_create_client_state = {
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
}


# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = { }

on_country_creation = {
}

on_federation_leader_change = {
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
}

#FROM = country dev was transferred from, ROOT = country doing the transferring. It is triggered by normal concentrate too though FROM isn't set in that case
on_transfer_development = {
}
#FROM = overlord, ROOT - colony
on_colonial_type_change = {

}

on_estate_led_regency = {}

on_estate_led_regency_surpassed = {}

on_extended_regency = {
}

on_estate_removed = {}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source, fires when the colony is created
on_colony_established = {
}

#scope = new country, FROM = parent country
on_colonial_nation_established = {
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source
on_colonist_boosting_colony = {
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
}

on_institution_embracement = {
}
on_national_focus_change = {}

on_capital_moved = {
}

#ROOT = province that was expanded in, FROM = country that did it
on_expanded_infrastructure = {
}

#ROOT = province that was centralized in
on_centralized_state = {}

#ROOT = country
monarch_on_shipwreck = {
}
heir_on_shipwreck = {
}
consort_on_shipwreck = {
}

#ROOT = country
on_defender_of_faith_loss = {
}
on_defender_of_faith_claim = {
}
on_hre_dismantled = {
}
on_new_age = {}

#ROOT = province
on_adm_exploited = {  }
on_dip_exploited = {
}
on_mil_exploited = {
}
on_raze = {
}
on_concentrate_development = {
}

on_slacken_start = {
}
on_slacken_stop = {
}

on_colony_finished = { #ROOT - Province
}

on_advisor_hired = { #ROOT - Country

}

on_adm_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_dip_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_mil_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_core = { #ROOT - Province, #FROM - Country that gets the core

}

on_tech_taken = { #ROOT - Country

}

on_adm_tech_taken = { #ROOT - Country, executed after on_tech_taken!

}

on_dip_tech_taken = { #ROOT - Country, executed after on_tech_taken!

}

on_mil_tech_taken = { #ROOT - Country, executed after on_tech_taken!

} 

on_barrage = { #ROOT - barraging country, FROM - barraged province 

}

on_naval_barrage = { #ROOT - barraging country, FROM - barraged province 

}

on_scorch_earth  = { #ROOT - scorching country, FROM - scorched province

}

on_war_ended = { #ROOT - Winer FROM - Loser
	
}

on_alliance_broken = { }

on_royal_marriage_broken = { #ROOT - Original marriage creator, FROM - Marriage accepter

}

on_alliance_created = { #ROOT - Alliance sender, FROM - Alliance accepter

}

on_royal_marriage = { #ROOT - Marraige sender, FROM - marriage accepter

}

on_heir_disinherited = {
}
on_overrun = { #ROOT - winner, FROM - loser, on stackwipe

}